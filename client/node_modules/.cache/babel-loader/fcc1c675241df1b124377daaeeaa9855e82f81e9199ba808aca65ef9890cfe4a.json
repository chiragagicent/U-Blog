{"ast":null,"code":"var _jsxFileName = \"/home/chiragramnani/Desktop/project/full-stack-crud/client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport UserDashboard from \"./components/UserDashboard\";\n//import { selectIsLoggedIn } from \"./features/auth/authSlice\";\nimport { selectRole } from \"./features/auth/authSlice\";\nimport { Navigate } from \"react-router-dom\";\n/* window.addEventListener(\"beforeunload\", () => {\n  // Clear token from local storage\n  localStorage.removeItem(\"token\");\n}); */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.addEventListener('beforeunload', event => {\n  // Cancel the event as stated by the standard.\n  event.preventDefault();\n  // Chrome requires returnValue to be set.\n  event.returnValue = '';\n});\nconst App = () => {\n  _s();\n  //const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n  const role = useSelector(selectRole);\n  //const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegistrationForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin-dashboard\",\n        element: role === \"admin\" ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 68\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user-dashboard\",\n        element: role === \"regular\" ? /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 69\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dOv4eg0XYuXcYfCeNzqZz0GKZew=\", false, function () {\n  return [useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","React","BrowserRouter","Router","Routes","Route","LoginForm","RegistrationForm","AdminDashboard","UserDashboard","selectRole","Navigate","jsxDEV","_jsxDEV","window","addEventListener","event","preventDefault","returnValue","App","_s","role","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/chiragramnani/Desktop/project/full-stack-crud/client/src/App.js"],"sourcesContent":["// App.js\nimport {useSelector,useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport UserDashboard from \"./components/UserDashboard\";\n//import { selectIsLoggedIn } from \"./features/auth/authSlice\";\nimport { selectRole } from \"./features/auth/authSlice\";\nimport { Navigate } from \"react-router-dom\";\n/* window.addEventListener(\"beforeunload\", () => {\n  // Clear token from local storage\n  localStorage.removeItem(\"token\");\n}); */\nwindow.addEventListener('beforeunload', (event) => {\n  // Cancel the event as stated by the standard.\n  event.preventDefault();\n  // Chrome requires returnValue to be set.\n  event.returnValue = '';\n});\n\nconst App = () => {\n  //const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n  const role = useSelector(selectRole); \n  //const dispatch = useDispatch();\n  return (\n\n    <Router>\n      <Routes>\n            <Route path=\"/login\" element={<LoginForm/> } />\n            <Route path=\"/register\" element={<RegistrationForm />} />\n            <Route path=\"/admin-dashboard\" element={role===\"admin\"?<AdminDashboard />:<Navigate to=\"/\"/>} />\n            <Route path=\"/user-dashboard\" element={role===\"regular\"?<UserDashboard />:<Navigate to=\"/\"/>} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAAQA,WAAW,EAACC,WAAW,QAAQ,aAAa;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,aAAa,MAAM,4BAA4B;AACtD;AACA,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIAC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAGC,KAAK,IAAK;EACjD;EACAA,KAAK,CAACC,cAAc,CAAC,CAAC;EACtB;EACAD,KAAK,CAACE,WAAW,GAAG,EAAE;AACxB,CAAC,CAAC;AAEF,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAMC,IAAI,GAAGtB,WAAW,CAACW,UAAU,CAAC;EACpC;EACA,oBAEEG,OAAA,CAACV,MAAM;IAAAmB,QAAA,eACLT,OAAA,CAACT,MAAM;MAAAkB,QAAA,gBACDT,OAAA,CAACR,KAAK;QAACkB,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEX,OAAA,CAACP,SAAS;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/Cf,OAAA,CAACR,KAAK;QAACkB,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEX,OAAA,CAACN,gBAAgB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDf,OAAA,CAACR,KAAK;QAACkB,IAAI,EAAC,kBAAkB;QAACC,OAAO,EAAEH,IAAI,KAAG,OAAO,gBAACR,OAAA,CAACL,cAAc;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAACf,OAAA,CAACF,QAAQ;UAACkB,EAAE,EAAC;QAAG;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChGf,OAAA,CAACR,KAAK;QAACkB,IAAI,EAAC,iBAAiB;QAACC,OAAO,EAAEH,IAAI,KAAG,SAAS,gBAACR,OAAA,CAACJ,aAAa;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAACf,OAAA,CAACF,QAAQ;UAACkB,EAAE,EAAC;QAAG;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9F;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACR,EAAA,CAfID,GAAG;EAAA,QAEMpB,WAAW;AAAA;AAAA+B,EAAA,GAFpBX,GAAG;AAiBT,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}