{"ast":null,"code":"var _jsxFileName = \"/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts, selectPosts, deletePost, addPost as addPostAction, updatePost as updatePostAction } from \"./postSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(selectPosts);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n  const handleDelete = postId => {\n    dispatch(deletePost(postId));\n  };\n  const handleAddPost = () => {\n    dispatch(addPostAction(formData.title, formData.content));\n    setFormData({\n      title: \"\",\n      content: \"\"\n    });\n  };\n  const handleUpdatePost = postId => {\n    dispatch(updatePostAction(postId, formData));\n    setFormData({\n      title: \"\",\n      content: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: formData.title,\n        onChange: e => setFormData({\n          ...formData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: formData.content,\n        onChange: e => setFormData({\n          ...formData,\n          content: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdatePost(post.id),\n          children: \"Edit Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(post.id),\n          children: \"Delete Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"A8Y9ILK4qkZyn9ePqoDI2UaPDFI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchPosts","selectPosts","deletePost","addPost","addPostAction","updatePost","updatePostAction","jsxDEV","_jsxDEV","UserDashboard","_s","dispatch","posts","formData","setFormData","title","content","handleDelete","postId","handleAddPost","handleUpdatePost","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","post","id","_c","$RefreshReg$"],"sources":["/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/UserDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  selectPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n} from \"./postSlice\";\n\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(selectPosts);\n  const [formData, setFormData] = useState({ title: \"\", content: \"\" });\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(formData.title, formData.content));\n    setFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    dispatch(updatePostAction(postId, formData));\n    setFormData({ title: \"\", content: \"\" });\n  };\n\n  return (\n    <div>\n      <h2>User Dashboard</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={formData.title}\n          onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={formData.content}\n          onChange={(e) =>\n            setFormData({ ...formData, content: e.target.value })\n          }\n        ></textarea>\n        <button onClick={handleAddPost}>Add Post</button>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            <button onClick={() => handleUpdatePost(post.id)}>Edit Post</button>\n            <button onClick={() => handleDelete(post.id)}>Delete Post</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}