{"ast":null,"code":"var _jsxFileName = \"/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/UserDashboard.js\",\n  _s2 = $RefreshSig$();\n/* import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  selectPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n} from \"../features/posts/postsSlice\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\"; // Import selectIsLoggedIn and logout\n\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const posts = useSelector(selectPosts);\n  const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    const postToUpdate = posts.find((post) => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content,\n      });\n    }\n    setEditingPostId(postId);\n  };\n\n  const handleEditFormChange = (e) => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEditFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleCancelEdit = () => {\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleLogout = () => {\n    dispatch(logout()); // Dispatch logout action\n  };\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    }\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <div>\n      <h2>User Dashboard</h2>\n      <div>\n        <button onClick={handleLogout}>Logout</button>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={addPostFormData.title}\n          name=\"title\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, title: e.target.value })\n          }\n          disabled={editingPostId !== null}\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={addPostFormData.content}\n          name=\"content\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, content: e.target.value })\n          }\n          disabled={editingPostId !== null}\n        ></textarea>\n        <button onClick={handleAddPost} disabled={editingPostId !== null}>\n          Add Post\n        </button>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            {editingPostId === post.id ? (\n              <form onSubmit={handleEditFormSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  value={editPostFormData.title}\n                  name=\"title\"\n                  onChange={handleEditFormChange}\n                />\n                <textarea\n                  placeholder=\"Content\"\n                  value={editPostFormData.content}\n                  name=\"content\"\n                  onChange={handleEditFormChange}\n                ></textarea>\n                <button type=\"submit\">Update</button>\n                <button type=\"button\" onClick={handleCancelEdit}>\n                  Cancel\n                </button>\n              </form>\n            ) : (\n              <>\n                <button onClick={() => handleUpdatePost(post.id)}>\n                  Edit Post\n                </button>\n                <button onClick={() => handleDelete(post.id)}>\n                  Delete Post\n                </button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts, selectPosts, deletePost, addPost as addPostAction, updatePost as updatePostAction } from \"../features/posts/postsSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const posts = useSelector(selectPosts);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n  _s(useEffect(_s(() => {\n    _s();\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    dispatch(fetchPosts());\n  }, \"wwozkPYuXjHFfszlt2mcSB3o0is=\", false, function () {\n    return [useSelector];\n  }), [dispatch]), \"wwozkPYuXjHFfszlt2mcSB3o0is=\", false, function () {\n    return [useSelector];\n  });\n  const handleDelete = postId => {\n    dispatch(deletePost(postId));\n  };\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({\n      title: \"\",\n      content: \"\"\n    });\n  };\n  const handleUpdatePost = postId => {\n    const postToUpdate = posts.find(post => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content\n      });\n    }\n    setEditingPostId(postId);\n  };\n  const handleEditFormChange = e => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleEditFormSubmit = e => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({\n      title: \"\",\n      content: \"\"\n    });\n    setEditingPostId(null);\n  };\n  const handleCancelEdit = () => {\n    setEditPostFormData({\n      title: \"\",\n      content: \"\"\n    });\n    setEditingPostId(null);\n  };\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    }\n  }, [isLoggedIn, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 focus:outline-none\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: addPostFormData.title,\n        name: \"title\",\n        onChange: e => setAddPostFormData({\n          ...addPostFormData,\n          title: e.target.value\n        }),\n        disabled: editingPostId !== null,\n        className: \"border rounded px-4 py-2 mt-2 mr-2 focus:outline-none focus:border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: addPostFormData.content,\n        name: \"content\",\n        onChange: e => setAddPostFormData({\n          ...addPostFormData,\n          content: e.target.value\n        }),\n        disabled: editingPostId !== null,\n        className: \"border rounded px-4 py-2 mt-2 mr-2 focus:outline-none focus:border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        disabled: editingPostId !== null,\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\",\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), editingPostId === post.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditFormSubmit,\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            value: editPostFormData.title,\n            name: \"title\",\n            onChange: handleEditFormChange,\n            className: \"border rounded px-4 py-2 mr-2 focus:outline-none focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Content\",\n            value: editPostFormData.content,\n            name: \"content\",\n            onChange: handleEditFormChange,\n            className: \"border rounded px-4 py-2 mr-2 focus:outline-none focus:border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCancelEdit,\n            className: \"bg-gray-300 text-gray-700 px-4 py-2 rounded ml-2 hover:bg-gray-400 focus:outline-none\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdatePost(post.id),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\",\n            children: \"Edit Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(post.id),\n            className: \"bg-red-500 text-white px-4 py-2 rounded ml-2 hover:bg-red-600 focus:outline-none\",\n            children: \"Delete Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserDashboard, \"+c3giJYh6oSyss90DeWikOxcduw=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchPosts","selectPosts","deletePost","addPost","addPostAction","updatePost","updatePostAction","useNavigate","selectIsLoggedIn","logout","jsxDEV","_jsxDEV","UserDashboard","_s2","_s","$RefreshSig$","dispatch","navigate","posts","isLoggedIn","addPostFormData","setAddPostFormData","title","content","editPostFormData","setEditPostFormData","editingPostId","setEditingPostId","handleDelete","postId","handleAddPost","handleUpdatePost","postToUpdate","find","post","id","handleEditFormChange","e","target","name","value","handleEditFormSubmit","preventDefault","handleCancelEdit","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","disabled","map","onSubmit","_c","$RefreshReg$"],"sources":["/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/UserDashboard.js"],"sourcesContent":["/* import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  selectPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n} from \"../features/posts/postsSlice\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\"; // Import selectIsLoggedIn and logout\n\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const posts = useSelector(selectPosts);\n  const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    const postToUpdate = posts.find((post) => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content,\n      });\n    }\n    setEditingPostId(postId);\n  };\n\n  const handleEditFormChange = (e) => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEditFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleCancelEdit = () => {\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleLogout = () => {\n    dispatch(logout()); // Dispatch logout action\n  };\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    }\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <div>\n      <h2>User Dashboard</h2>\n      <div>\n        <button onClick={handleLogout}>Logout</button>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={addPostFormData.title}\n          name=\"title\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, title: e.target.value })\n          }\n          disabled={editingPostId !== null}\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={addPostFormData.content}\n          name=\"content\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, content: e.target.value })\n          }\n          disabled={editingPostId !== null}\n        ></textarea>\n        <button onClick={handleAddPost} disabled={editingPostId !== null}>\n          Add Post\n        </button>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            {editingPostId === post.id ? (\n              <form onSubmit={handleEditFormSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  value={editPostFormData.title}\n                  name=\"title\"\n                  onChange={handleEditFormChange}\n                />\n                <textarea\n                  placeholder=\"Content\"\n                  value={editPostFormData.content}\n                  name=\"content\"\n                  onChange={handleEditFormChange}\n                ></textarea>\n                <button type=\"submit\">Update</button>\n                <button type=\"button\" onClick={handleCancelEdit}>\n                  Cancel\n                </button>\n              </form>\n            ) : (\n              <>\n                <button onClick={() => handleUpdatePost(post.id)}>\n                  Edit Post\n                </button>\n                <button onClick={() => handleDelete(post.id)}>\n                  Delete Post\n                </button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n */\n\n\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  selectPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n} from \"../features/posts/postsSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\";\n\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const posts = useSelector(selectPosts);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n\n  useEffect(() => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    const postToUpdate = posts.find((post) => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content,\n      });\n    }\n    setEditingPostId(postId);\n  };\n\n  const handleEditFormChange = (e) => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEditFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleCancelEdit = () => {\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    }\n  }, [isLoggedIn,navigate]);\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h2 className=\"text-2xl font-bold mb-4\">User Dashboard</h2>\n      <div className=\"mb-4\">\n        <button\n          onClick={handleLogout}\n          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 focus:outline-none\"\n        >\n          Logout\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={addPostFormData.title}\n          name=\"title\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, title: e.target.value })\n          }\n          disabled={editingPostId !== null}\n          className=\"border rounded px-4 py-2 mt-2 mr-2 focus:outline-none focus:border-blue-500\"\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={addPostFormData.content}\n          name=\"content\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, content: e.target.value })\n          }\n          disabled={editingPostId !== null}\n          className=\"border rounded px-4 py-2 mt-2 mr-2 focus:outline-none focus:border-blue-500\"\n        ></textarea>\n        <button\n          onClick={handleAddPost}\n          disabled={editingPostId !== null}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\"\n        >\n          Add Post\n        </button>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id} className=\"mb-4\">\n            <h3 className=\"text-xl font-bold mb-2\">{post.title}</h3>\n            <p>{post.content}</p>\n            {editingPostId === post.id ? (\n              <form onSubmit={handleEditFormSubmit} className=\"mt-2\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  value={editPostFormData.title}\n                  name=\"title\"\n                  onChange={handleEditFormChange}\n                  className=\"border rounded px-4 py-2 mr-2 focus:outline-none focus:border-blue-500\"\n                />\n                <textarea\n                  placeholder=\"Content\"\n                  value={editPostFormData.content}\n                  name=\"content\"\n                  onChange={handleEditFormChange}\n                  className=\"border rounded px-4 py-2 mr-2 focus:outline-none focus:border-blue-500\"\n                ></textarea>\n                <button\n                  type=\"submit\"\n                  className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\"\n                >\n                  Update\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handleCancelEdit}\n                  className=\"bg-gray-300 text-gray-700 px-4 py-2 rounded ml-2 hover:bg-gray-400 focus:outline-none\"\n                >\n                  Cancel\n                </button>\n              </form>\n            ) : (\n              <div className=\"mt-2\">\n                <button\n                  onClick={() => handleUpdatePost(post.id)}\n                  className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\"\n                >\n                  Edit Post\n                </button>\n                <button\n                  onClick={() => handleDelete(post.id)}\n                  className=\"bg-red-500 text-white px-4 py-2 rounded ml-2 hover:bg-red-600 focus:outline-none\"\n                >\n                  Delete Post\n                </button>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}