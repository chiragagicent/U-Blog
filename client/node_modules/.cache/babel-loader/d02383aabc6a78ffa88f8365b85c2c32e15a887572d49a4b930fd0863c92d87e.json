{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { selectToken } from \"../auth/authSlice\";\nexport const postSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    posts: [],\n    error: null,\n    isLoading: false\n  },\n  reducers: {\n    fetchPostsStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    fetchPostsSuccess: (state, action) => {\n      state.isLoading = false;\n      state.posts = action.payload;\n      state.error = null;\n    },\n    fetchPostsFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    addPostStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    addPostSuccess: (state, action) => {\n      state.isLoading = false;\n      state.posts.push(action.payload);\n      state.error = null;\n    },\n    addPostFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    updatePostStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    updatePostSuccess: (state, action) => {\n      state.isLoading = false;\n      const updatedPost = action.payload;\n      const index = state.posts.findIndex(post => post.id === updatedPost.id);\n      if (index !== -1) {\n        state.posts[index] = updatedPost;\n      }\n      state.error = null;\n    },\n    updatePostFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    deletePostStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    deletePostSuccess: (state, action) => {\n      state.isLoading = false;\n      state.posts = state.posts.filter(post => post.id !== action.payload);\n      state.error = null;\n    },\n    deletePostFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  fetchPostsStart,\n  fetchPostsSuccess,\n  fetchPostsFailure,\n  addPostStart,\n  addPostSuccess,\n  addPostFailure,\n  updatePostStart,\n  updatePostSuccess,\n  updatePostFailure,\n  deletePostStart,\n  deletePostSuccess,\n  deletePostFailure\n} = postSlice.actions;\n\n// Async action to fetch posts\nexport const fetchPosts = () => async (dispatch, getState) => {\n  dispatch(fetchPostsStart());\n  const token = localStorage.getItem(\"token\");\n  console.log(token);\n  if (!!token) {\n    const token = selectToken(getState());\n    console.log(token);\n  }\n  try {\n    const response = await axios.get(\"http://127.0.0.1:8000/api/posts\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch(fetchPostsSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchPostsFailure(error.response.data.message));\n  }\n};\n\n// Async action to add a post\nexport const addPost = (title, content) => async (dispatch, getState) => {\n  dispatch(addPostStart());\n  const token = selectToken(getState());\n  try {\n    const response = await axios.post(\"http://127.0.0.1:8000/api/posts\", {\n      title,\n      content\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch(addPostSuccess(response.data.post));\n  } catch (error) {\n    dispatch(addPostFailure(error.response.data.message));\n  }\n};\n\n// Async action to update a post\nexport const updatePost = (postId, postData) => async (dispatch, getState) => {\n  dispatch(updatePostStart());\n  const token = selectToken(getState());\n  try {\n    const response = await axios.put(`http://127.0.0.1:8000/api/posts/${postId}`, postData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch(updatePostSuccess(response.data.post));\n  } catch (error) {\n    dispatch(updatePostFailure(error.response.data.message));\n  }\n};\n\n// Async action to delete a post\nexport const deletePost = postId => async (dispatch, getState) => {\n  dispatch(deletePostStart());\n  const token = selectToken(getState());\n  try {\n    await axios.delete(`http://127.0.0.1:8000/api/posts/${postId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    dispatch(deletePostSuccess(postId));\n  } catch (error) {\n    dispatch(deletePostFailure(error.response.data.message));\n  }\n};\nexport const selectPosts = state => state.posts.posts;\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","axios","selectToken","postSlice","name","initialState","posts","error","isLoading","reducers","fetchPostsStart","state","fetchPostsSuccess","action","payload","fetchPostsFailure","addPostStart","addPostSuccess","push","addPostFailure","updatePostStart","updatePostSuccess","updatedPost","index","findIndex","post","id","updatePostFailure","deletePostStart","deletePostSuccess","filter","deletePostFailure","actions","fetchPosts","dispatch","getState","token","localStorage","getItem","console","log","response","get","headers","Authorization","data","message","addPost","title","content","updatePost","postId","postData","put","deletePost","delete","selectPosts","reducer"],"sources":["/home/chiragramnani/Desktop/project/full-stack-crud/client/src/features/posts/postsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { selectToken } from \"../auth/authSlice\";\n\nexport const postSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    posts: [],\n    error: null,\n    isLoading: false,\n  },\n  reducers: {\n    fetchPostsStart: (state) => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    fetchPostsSuccess: (state, action) => {\n      state.isLoading = false;\n      state.posts = action.payload;\n      state.error = null;\n    },\n    fetchPostsFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    addPostStart: (state) => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    addPostSuccess: (state, action) => {\n      state.isLoading = false;\n      state.posts.push(action.payload);\n      state.error = null;\n    },\n    addPostFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    updatePostStart: (state) => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    updatePostSuccess: (state, action) => {\n      state.isLoading = false;\n      const updatedPost = action.payload;\n      const index = state.posts.findIndex((post) => post.id === updatedPost.id);\n      if (index !== -1) {\n        state.posts[index] = updatedPost;\n      }\n      state.error = null;\n    },\n    updatePostFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    deletePostStart: (state) => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    deletePostSuccess: (state, action) => {\n      state.isLoading = false;\n      state.posts = state.posts.filter((post) => post.id !== action.payload);\n      state.error = null;\n    },\n    deletePostFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  fetchPostsStart,\n  fetchPostsSuccess,\n  fetchPostsFailure,\n  addPostStart,\n  addPostSuccess,\n  addPostFailure,\n  updatePostStart,\n  updatePostSuccess,\n  updatePostFailure,\n  deletePostStart,\n  deletePostSuccess,\n  deletePostFailure,\n} = postSlice.actions;\n\n// Async action to fetch posts\nexport const fetchPosts = () => async (dispatch, getState) => {\n  dispatch(fetchPostsStart());\n  const token=localStorage.getItem(\"token\");\n  console.log(token);\n  if(!!token){\n    const token = selectToken(getState());\n    console.log(token);\n  }\n  try {\n    const response = await axios.get(\"http://127.0.0.1:8000/api/posts\", {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    dispatch(fetchPostsSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchPostsFailure(error.response.data.message));\n  }\n};\n\n// Async action to add a post\nexport const addPost = (title, content) => async (dispatch, getState) => {\n  dispatch(addPostStart());\n  const token = selectToken(getState());\n  try {\n    const response = await axios.post(\n      \"http://127.0.0.1:8000/api/posts\",\n      { title, content },\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    dispatch(addPostSuccess(response.data.post));\n  } catch (error) {\n    dispatch(addPostFailure(error.response.data.message));\n  }\n};\n\n// Async action to update a post\nexport const updatePost = (postId, postData) => async (dispatch, getState) => {\n  dispatch(updatePostStart());\n  const token = selectToken(getState());\n  try {\n    const response = await axios.put(\n      `http://127.0.0.1:8000/api/posts/${postId}`,\n      postData,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    dispatch(updatePostSuccess(response.data.post));\n  } catch (error) {\n    dispatch(updatePostFailure(error.response.data.message));\n  }\n};\n\n// Async action to delete a post\nexport const deletePost = (postId) => async (dispatch, getState) => {\n  dispatch(deletePostStart());\n  const token = selectToken(getState());\n  try {\n    await axios.delete(`http://127.0.0.1:8000/api/posts/${postId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    dispatch(deletePostSuccess(postId));\n  } catch (error) {\n    dispatch(deletePostFailure(error.response.data.message));\n  }\n};\n\nexport const selectPosts = (state) => state.posts.posts;\n\nexport default postSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}