{"ast":null,"code":"var _jsxFileName = \"/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\"; // Import selectIsLoggedIn and logout\nimport { fetchUsers, selectUsers, deleteUser, addUser as addUserAction, updateUser as updateUserAction } from \"../features/user/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const users = useSelector(selectUsers);\n  const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  const handleDelete = userId => {\n    dispatch(deleteUser(userId));\n  };\n  const handleAddUser = () => {\n    dispatch(addUserAction(formData.name, formData.email, formData.password, formData.role));\n    setFormData({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      role: \"\"\n    });\n  };\n  const handleUpdateUser = userId => {\n    dispatch(updateUserAction(userId, formData));\n    setFormData({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      role: \"regular\"\n    });\n  };\n  const handleLogout = () => {\n    dispatch(logout()); // Dispatch logout action\n  };\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    }\n  }, [isLoggedIn, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: formData.name,\n        onChange: e => setFormData({\n          ...formData,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: formData.password,\n        onChange: e => setFormData({\n          ...formData,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"role\",\n        value: formData.role,\n        onChange: e => setFormData({\n          ...formData,\n          role: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddUser,\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateUser(user.id),\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(user.id),\n          children: \"Delete User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"rUPtdDAL87lKcqQIDl3jrVRzk+E=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","selectIsLoggedIn","logout","fetchUsers","selectUsers","deleteUser","addUser","addUserAction","updateUser","updateUserAction","jsxDEV","_jsxDEV","AdminDashboard","_s","dispatch","navigate","users","isLoggedIn","formData","setFormData","name","email","password","role","handleDelete","userId","handleAddUser","handleUpdateUser","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","map","user","id","_c","$RefreshReg$"],"sources":["/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\"; // Import selectIsLoggedIn and logout\nimport {\n  fetchUsers,\n  selectUsers,\n  deleteUser,\n  addUser as addUserAction,\n  updateUser as updateUserAction,\n} from \"../features/user/userSlice\";\n\nconst AdminDashboard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const users = useSelector(selectUsers);\n  const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"\",\n  });\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  const handleDelete = (userId) => {\n    dispatch(deleteUser(userId));\n  };\n\n  const handleAddUser = () => {\n    dispatch(\n      addUserAction(\n        formData.name,\n        formData.email,\n        formData.password,\n        formData.role\n      )\n    );\n    setFormData({ name: \"\", email: \"\", password: \"\", role: \"\" });\n  };\n\n  const handleUpdateUser = (userId) => {\n    dispatch(updateUserAction(userId, formData));\n    setFormData({ name: \"\", email: \"\", password: \"\", role: \"regular\" });\n  };\n\n  const handleLogout = () => {\n    dispatch(logout()); // Dispatch logout action\n  };\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    }\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <div>\n      <h2>Admin Dashboard</h2>\n      <div>\n        <button onClick={handleLogout}>Logout</button>\n\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={formData.name}\n          onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={formData.email}\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={formData.password}\n          onChange={(e) =>\n            setFormData({ ...formData, password: e.target.value })\n          }\n        />\n        <input\n          type=\"text\"\n          placeholder=\"role\"\n          value={formData.role}\n          onChange={(e) => setFormData({ ...formData, role: e.target.value })}\n        />\n        <button onClick={handleAddUser}>Add User</button>\n      </div>\n      <ul>\n        {users.map((user) => (\n          <li key={user.id}>\n            <h3>{user.name}</h3>\n            <p>{user.email}</p>\n            <button onClick={() => handleUpdateUser(user.id)}>Edit User</button>\n            <button onClick={() => handleDelete(user.id)}>Delete User</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}