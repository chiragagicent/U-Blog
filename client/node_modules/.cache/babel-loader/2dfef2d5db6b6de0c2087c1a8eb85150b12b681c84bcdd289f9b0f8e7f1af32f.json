{"ast":null,"code":"var _jsxFileName = \"/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/UserDashboard.js\",\n  _s = $RefreshSig$();\n/* import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  selectPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n} from \"../features/posts/postsSlice\";\n\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(selectPosts);\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    const postToUpdate = posts.find((post) => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content,\n      });\n    }\n    setEditingPostId(postId);\n  };\n\n  const handleEditFormChange = (e) => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEditFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleCancelEdit = () => {\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  return (\n    <div>\n      <h2>User Dashboard</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={addPostFormData.title}\n          name=\"title\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, title: e.target.value })\n          }\n          disabled={editingPostId !== null}\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={addPostFormData.content}\n          name=\"content\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, content: e.target.value })\n          }\n          disabled={editingPostId !== null}\n        ></textarea>\n        <button onClick={handleAddPost} disabled={editingPostId !== null}>\n          Add Post\n        </button>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            {editingPostId === post.id ? (\n              <form onSubmit={handleEditFormSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  value={editPostFormData.title}\n                  name=\"title\"\n                  onChange={handleEditFormChange}\n                />\n                <textarea\n                  placeholder=\"Content\"\n                  value={editPostFormData.content}\n                  name=\"content\"\n                  onChange={handleEditFormChange}\n                ></textarea>\n                <button type=\"submit\">Update</button>\n                <button type=\"button\" onClick={handleCancelEdit}>\n                  Cancel\n                </button>\n              </form>\n            ) : (\n              <>\n                <button onClick={() => handleUpdatePost(post.id)}>\n                  Edit Post\n                </button>\n                <button onClick={() => handleDelete(post.id)}>\n                  Delete Post\n                </button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//import { useHistory } from \"react-router-dom\";\nimport { fetchPosts, selectPosts, deletePost, addPost as addPostAction, updatePost as updatePostAction } from \"../features/posts/postsSlice\";\nimport { logout } from \"../features/auth/authSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  // const history = useHistory();\n  const posts = useSelector(selectPosts);\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn); // Get login status\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n  const handleDelete = postId => {\n    dispatch(deletePost(postId));\n  };\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({\n      title: \"\",\n      content: \"\"\n    });\n  };\n  const handleUpdatePost = postId => {\n    const postToUpdate = posts.find(post => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content\n      });\n    }\n    setEditingPostId(postId);\n  };\n  const handleEditFormChange = e => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleEditFormSubmit = e => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({\n      title: \"\",\n      content: \"\"\n    });\n    setEditingPostId(null);\n  };\n  const handleCancelEdit = () => {\n    setEditPostFormData({\n      title: \"\",\n      content: \"\"\n    });\n    setEditingPostId(null);\n  };\n  const handleLogout = () => {\n    dispatch(logout());\n    //history.push(\"/login\");\n  };\n  if (!isLoggedIn) {\n    // Redirect to login page if not logged in\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: addPostFormData.title,\n        name: \"title\",\n        onChange: e => setAddPostFormData({\n          ...addPostFormData,\n          title: e.target.value\n        }),\n        disabled: editingPostId !== null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: addPostFormData.content,\n        name: \"content\",\n        onChange: e => setAddPostFormData({\n          ...addPostFormData,\n          content: e.target.value\n        }),\n        disabled: editingPostId !== null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        disabled: editingPostId !== null,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), editingPostId === post.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            value: editPostFormData.title,\n            name: \"title\",\n            onChange: handleEditFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Content\",\n            value: editPostFormData.content,\n            name: \"content\",\n            onChange: handleEditFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdatePost(post.id),\n            children: \"Edit Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(post.id),\n            children: \"Delete Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"vHH4SBaV7f9pU6Fp6aU55bHa7mk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchPosts","selectPosts","deletePost","addPost","addPostAction","updatePost","updatePostAction","logout","jsxDEV","_jsxDEV","Fragment","_Fragment","UserDashboard","_s","dispatch","posts","addPostFormData","setAddPostFormData","title","content","editPostFormData","setEditPostFormData","editingPostId","setEditingPostId","isLoggedIn","state","auth","handleDelete","postId","handleAddPost","handleUpdatePost","postToUpdate","find","post","id","handleEditFormChange","e","target","name","value","handleEditFormSubmit","preventDefault","handleCancelEdit","handleLogout","Redirect","to","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","type","placeholder","onChange","disabled","map","onSubmit","_c","$RefreshReg$"],"sources":["/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/UserDashboard.js"],"sourcesContent":["/* import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  selectPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n} from \"../features/posts/postsSlice\";\n\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(selectPosts);\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    const postToUpdate = posts.find((post) => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content,\n      });\n    }\n    setEditingPostId(postId);\n  };\n\n  const handleEditFormChange = (e) => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEditFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleCancelEdit = () => {\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  return (\n    <div>\n      <h2>User Dashboard</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={addPostFormData.title}\n          name=\"title\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, title: e.target.value })\n          }\n          disabled={editingPostId !== null}\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={addPostFormData.content}\n          name=\"content\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, content: e.target.value })\n          }\n          disabled={editingPostId !== null}\n        ></textarea>\n        <button onClick={handleAddPost} disabled={editingPostId !== null}>\n          Add Post\n        </button>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            {editingPostId === post.id ? (\n              <form onSubmit={handleEditFormSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  value={editPostFormData.title}\n                  name=\"title\"\n                  onChange={handleEditFormChange}\n                />\n                <textarea\n                  placeholder=\"Content\"\n                  value={editPostFormData.content}\n                  name=\"content\"\n                  onChange={handleEditFormChange}\n                ></textarea>\n                <button type=\"submit\">Update</button>\n                <button type=\"button\" onClick={handleCancelEdit}>\n                  Cancel\n                </button>\n              </form>\n            ) : (\n              <>\n                <button onClick={() => handleUpdatePost(post.id)}>\n                  Edit Post\n                </button>\n                <button onClick={() => handleDelete(post.id)}>\n                  Delete Post\n                </button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n */\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//import { useHistory } from \"react-router-dom\";\nimport {\n  fetchPosts,\n  selectPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n} from \"../features/posts/postsSlice\";\nimport { logout } from \"../features/auth/authSlice\";\n\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  // const history = useHistory();\n  const posts = useSelector(selectPosts);\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn); // Get login status\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    const postToUpdate = posts.find((post) => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content,\n      });\n    }\n    setEditingPostId(postId);\n  };\n\n  const handleEditFormChange = (e) => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEditFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleCancelEdit = () => {\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n    //history.push(\"/login\");\n  };\n  if (!isLoggedIn) {\n    // Redirect to login page if not logged in\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div>\n      <h2>User Dashboard</h2>\n      <button onClick={handleLogout}>Logout</button>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={addPostFormData.title}\n          name=\"title\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, title: e.target.value })\n          }\n          disabled={editingPostId !== null}\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={addPostFormData.content}\n          name=\"content\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, content: e.target.value })\n          }\n          disabled={editingPostId !== null}\n        ></textarea>\n        <button onClick={handleAddPost} disabled={editingPostId !== null}>\n          Add Post\n        </button>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            {editingPostId === post.id ? (\n              <form onSubmit={handleEditFormSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  value={editPostFormData.title}\n                  name=\"title\"\n                  onChange={handleEditFormChange}\n                />\n                <textarea\n                  placeholder=\"Content\"\n                  value={editPostFormData.content}\n                  name=\"content\"\n                  onChange={handleEditFormChange}\n                ></textarea>\n                <button type=\"submit\">Update</button>\n                <button type=\"button\" onClick={handleCancelEdit}>\n                  Cancel\n                </button>\n              </form>\n            ) : (\n              <>\n                <button onClick={() => handleUpdatePost(post.id)}>\n                  Edit Post\n                </button>\n                <button onClick={() => handleDelete(post.id)}>\n                  Delete Post\n                </button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}