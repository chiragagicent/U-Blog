{"ast":null,"code":"var _jsxFileName = \"/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts, selectPosts, deletePost, addPost as addPostAction, updatePost as updatePostAction } from \"../features/posts/postsSlice\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigateimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\"; // Import selectIsLoggedIn and logout\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(selectPosts);\n  const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n  const handleDelete = postId => {\n    dispatch(deletePost(postId));\n  };\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({\n      title: \"\",\n      content: \"\"\n    });\n  };\n  const handleUpdatePost = postId => {\n    const postToUpdate = posts.find(post => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content\n      });\n    }\n    setEditingPostId(postId);\n  };\n  const handleEditFormChange = e => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleEditFormSubmit = e => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({\n      title: \"\",\n      content: \"\"\n    });\n    setEditingPostId(null);\n  };\n  const handleCancelEdit = () => {\n    setEditPostFormData({\n      title: \"\",\n      content: \"\"\n    });\n    setEditingPostId(null);\n  };\n  const handleLogout = () => {\n    dispatch(logout()); // Dispatch logout action\n  };\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    }\n  }, [isLoggedIn, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: addPostFormData.title,\n        name: \"title\",\n        onChange: e => setAddPostFormData({\n          ...addPostFormData,\n          title: e.target.value\n        }),\n        disabled: editingPostId !== null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: addPostFormData.content,\n        name: \"content\",\n        onChange: e => setAddPostFormData({\n          ...addPostFormData,\n          content: e.target.value\n        }),\n        disabled: editingPostId !== null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddPost,\n        disabled: editingPostId !== null,\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), editingPostId === post.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEditFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Title\",\n            value: editPostFormData.title,\n            name: \"title\",\n            onChange: handleEditFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Content\",\n            value: editPostFormData.content,\n            name: \"content\",\n            onChange: handleEditFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdatePost(post.id),\n            children: \"Edit Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(post.id),\n            children: \"Delete Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"Zay8jpLFVEso2X5Kz+UH8xqT5j0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchPosts","selectPosts","deletePost","addPost","addPostAction","updatePost","updatePostAction","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UserDashboard","_s","dispatch","posts","isLoggedIn","selectIsLoggedIn","addPostFormData","setAddPostFormData","title","content","editPostFormData","setEditPostFormData","editingPostId","setEditingPostId","handleDelete","postId","handleAddPost","handleUpdatePost","postToUpdate","find","post","id","handleEditFormChange","e","target","name","value","handleEditFormSubmit","preventDefault","handleCancelEdit","handleLogout","logout","navigate","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","disabled","onClick","map","onSubmit","_c","$RefreshReg$"],"sources":["/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/UserDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  selectPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n} from \"../features/posts/postsSlice\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigateimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\"; // Import selectIsLoggedIn and logout\n\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(selectPosts);\n  const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    const postToUpdate = posts.find((post) => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content,\n      });\n    }\n    setEditingPostId(postId);\n  };\n\n  const handleEditFormChange = (e) => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEditFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleCancelEdit = () => {\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n    const handleLogout = () => {\n      dispatch(logout()); // Dispatch logout action\n    };\n\n      useEffect(() => {\n        if (!isLoggedIn) {\n          navigate(\"/login\");\n        }\n      }, [isLoggedIn, navigate]);\n\n\n  return (\n    <div>\n      <h2>User Dashboard</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={addPostFormData.title}\n          name=\"title\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, title: e.target.value })\n          }\n          disabled={editingPostId !== null}\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={addPostFormData.content}\n          name=\"content\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, content: e.target.value })\n          }\n          disabled={editingPostId !== null}\n        ></textarea>\n        <button onClick={handleAddPost} disabled={editingPostId !== null}>\n          Add Post\n        </button>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            {editingPostId === post.id ? (\n              <form onSubmit={handleEditFormSubmit}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  value={editPostFormData.title}\n                  name=\"title\"\n                  onChange={handleEditFormChange}\n                />\n                <textarea\n                  placeholder=\"Content\"\n                  value={editPostFormData.content}\n                  name=\"content\"\n                  onChange={handleEditFormChange}\n                ></textarea>\n                <button type=\"submit\">Update</button>\n                <button type=\"button\" onClick={handleCancelEdit}>\n                  Cancel\n                </button>\n              </form>\n            ) : (\n              <>\n                <button onClick={() => handleUpdatePost(post.id)}>\n                  Edit Post\n                </button>\n                <button onClick={() => handleDelete(post.id)}>\n                  Delete Post\n                </button>\n              </>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}