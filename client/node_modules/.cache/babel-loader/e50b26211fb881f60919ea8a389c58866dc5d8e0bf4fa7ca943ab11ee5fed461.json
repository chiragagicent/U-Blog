{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n// Function to retrieve authentication token from storage\nfunction getAuthToken() {\n  // Check if token exists in localStorage\n  const token = localStorage.getItem(\"authToken\");\n\n  // If token is found, return it\n  if (token) {\n    return token;\n  } else {\n    // If token does not exist or is invalid, handle accordingly\n    // For example, redirect the user to the login page\n    window.location.href = \"/login\"; // Redirect to login page\n  }\n}\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    role: null,\n    token: null,\n    error: null,\n    isLoading: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.role = action.payload.role;\n      state.token = action.payload.token;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.user = null;\n      state.role = null;\n      state.token = null;\n      state.error = null;\n    },\n    registerStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    registerSuccess: (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.role = action.payload.role;\n      state.token = action.payload.token;\n      state.error = null;\n    },\n    registerFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  registerStart,\n  registerSuccess,\n  registerFailure\n} = authSlice.actions;\n\n// Async action to log in a user\nexport const login = (email, password) => async dispatch => {\n  dispatch(loginStart());\n  try {\n    const authToken = getAuthToken();\n    const response = await axios.post(\"http://localhost:8000/api/login\", {\n      email,\n      password\n    });\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginFailure(error.response.data.message));\n  }\n};\n\n// Async action to register a user\nexport const register = (name, email, password, role) => async dispatch => {\n  dispatch(registerStart());\n  try {\n    const authToken = getAuthToken();\n    const response = await axios.post(\"http://localhost:8000/api/register\", {\n      name,\n      email,\n      password,\n      role\n    }, {\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        // Include authentication token in request headers\n        \"Content-Type\": \"application/json\" // Set appropriate content type\n      }\n    });\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerFailure(error.response.data.message));\n  }\n};\nexport const selectUser = state => state.auth.user;\nexport const selectRole = state => state.auth.role;\nexport const selectToken = state => state.auth.token;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","axios","getAuthToken","token","localStorage","getItem","window","location","href","authSlice","name","initialState","user","role","error","isLoading","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","registerStart","registerSuccess","registerFailure","actions","login","email","password","dispatch","authToken","response","post","data","message","register","headers","Authorization","selectUser","auth","selectRole","selectToken","reducer"],"sources":["/home/chiragramnani/Desktop/project/full-stack-crud/client/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n// Function to retrieve authentication token from storage\nfunction getAuthToken() {\n  // Check if token exists in localStorage\n  const token = localStorage.getItem(\"authToken\");\n\n  // If token is found, return it\n  if (token) {\n    return token;\n  } else {\n    // If token does not exist or is invalid, handle accordingly\n    // For example, redirect the user to the login page\n    window.location.href = \"/login\"; // Redirect to login page\n  }\n}\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    role: null,\n    token: null,\n    error: null,\n    isLoading: false,\n  },\n  reducers: {\n    loginStart: (state) => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.role = action.payload.role;\n      state.token = action.payload.token;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    logout: (state) => {\n      state.user = null;\n      state.role = null;\n      state.token = null;\n      state.error = null;\n    },\n    registerStart: (state) => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    registerSuccess: (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.role = action.payload.role;\n      state.token = action.payload.token;\n      state.error = null;\n    },\n    registerFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  registerStart,\n  registerSuccess,\n  registerFailure,\n} = authSlice.actions;\n\n// Async action to log in a user\nexport const login = (email, password) => async (dispatch) => {\n  dispatch(loginStart());\n  try {\n    const authToken = getAuthToken();\n\n    const response = await axios.post(\"http://localhost:8000/api/login\", {\n      email,\n      password,\n    });\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginFailure(error.response.data.message));\n  }\n};\n\n// Async action to register a user\nexport const register = (name, email, password, role) => async (dispatch) => {\n  dispatch(registerStart());\n  try {\n    const authToken = getAuthToken();\n    const response = await axios.post(\n      \"http://localhost:8000/api/register\",\n      {\n        name,\n        email,\n        password,\n        role,\n      },\n      {\n        headers: {\n          Authorization: `Bearer ${authToken}`, // Include authentication token in request headers\n          \"Content-Type\": \"application/json\", // Set appropriate content type\n        },\n      }\n    );\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerFailure(error.response.data.message));\n  }\n};\n\nexport const selectUser = (state) => state.auth.user;\nexport const selectRole = (state) => state.auth.role;\nexport const selectToken = (state) => state.auth.token;\n\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}