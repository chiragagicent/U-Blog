{"ast":null,"code":"var _jsxFileName = \"/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/UserDashboard.js\",\n  _s = $RefreshSig$();\n/* import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n  setPosts\n} from \"../features/posts/postsSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\";\nimport { selectPosts } from \"../features/posts/postsSlice\";\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const posts = useSelector(selectPosts);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    const postToUpdate = posts.find((post) => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content,\n      });\n    }\n    setEditingPostId(postId);\n  };\n\n  const handleEditFormChange = (e) => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEditFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleCancelEdit = () => {\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleLogout = () => {\n    dispatch(setPosts());\n    dispatch(logout());\n  };\n \n  return (\n    <div className=\"container mx-auto p-4\">\n      <h2 className=\"text-2xl font-bold mb-4\">User Dashboard</h2>\n      <div className=\"mb-4\">\n        <button\n          onClick={handleLogout}\n          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 focus:outline-none\"\n        >\n          Logout\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={addPostFormData.title}\n          name=\"title\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, title: e.target.value })\n          }\n          disabled={editingPostId !== null}\n          className=\"border rounded px-4 py-2 mt-2 mr-2 focus:outline-none focus:border-blue-500\"\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={addPostFormData.content}\n          name=\"content\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, content: e.target.value })\n          }\n          disabled={editingPostId !== null}\n          className=\"border rounded px-4 py-2 mt-2 mr-2 focus:outline-none focus:border-blue-500\"\n        ></textarea>\n        <button\n          onClick={handleAddPost}\n          disabled={editingPostId !== null}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\"\n        >\n          Add Post\n        </button>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id} className=\"mb-4\">\n            <h3 className=\"text-xl font-bold mb-2\">{post.title}</h3>\n            <p>{post.content}</p>\n            {editingPostId === post.id ? (\n              <form onSubmit={handleEditFormSubmit} className=\"mt-2\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  value={editPostFormData.title}\n                  name=\"title\"\n                  onChange={handleEditFormChange}\n                  className=\"border rounded px-4 py-2 mr-2 focus:outline-none focus:border-blue-500\"\n                />\n                <textarea\n                  placeholder=\"Content\"\n                  value={editPostFormData.content}\n                  name=\"content\"\n                  onChange={handleEditFormChange}\n                  className=\"border rounded px-4 py-2 mr-2 focus:outline-none focus:border-blue-500\"\n                ></textarea>\n                <button\n                  type=\"submit\"\n                  className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\"\n                >\n                  Update\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handleCancelEdit}\n                  className=\"bg-gray-300 text-gray-700 px-4 py-2 rounded ml-2 hover:bg-gray-400 focus:outline-none\"\n                >\n                  Cancel\n                </button>\n              </form>\n            ) : (\n              <div className=\"mt-2\">\n                <button\n                  onClick={() => handleUpdatePost(post.id)}\n                  className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\"\n                >\n                  Edit Post\n                </button>\n                <button\n                  onClick={() => handleDelete(post.id)}\n                  className=\"bg-red-500 text-white px-4 py-2 rounded ml-2 hover:bg-red-600 focus:outline-none\"\n                >\n                  Delete Post\n                </button>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n */\nimport styles from \"../index.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchPosts, deletePost, addPost as addPostAction, updatePost as updatePostAction, setPosts } from \"../features/posts/postsSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\";\nimport { selectPosts } from \"../features/posts/postsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const posts = useSelector(selectPosts);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n  const handleDelete = postId => {\n    dispatch(deletePost(postId));\n  };\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({\n      title: \"\",\n      content: \"\"\n    });\n  };\n  const handleUpdatePost = postId => {\n    const postToUpdate = posts.find(post => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content\n      });\n    }\n    setEditingPostId(postId);\n  };\n  const handleEditFormChange = e => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleEditFormSubmit = e => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({\n      title: \"\",\n      content: \"\"\n    });\n    setEditingPostId(null);\n  };\n  const handleCancelEdit = () => {\n    setEditPostFormData({\n      title: \"\",\n      content: \"\"\n    });\n    setEditingPostId(null);\n  };\n  const handleLogout = () => {\n    dispatch(setPosts());\n    dispatch(logout());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen overflow-y-auto bg-gradient-to-br from-purple-900 to-blue-900 text-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"flex text-3xl font-bold mb-4 justify-left \",\n        children: \"User Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex items-center justify-left \",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \" bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 focus:outline-none mr-2 ml-2\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Title\",\n          value: addPostFormData.title,\n          name: \"title\",\n          onChange: e => setAddPostFormData({\n            ...addPostFormData,\n            title: e.target.value\n          }),\n          disabled: editingPostId !== null,\n          className: \" border rounded px-4 py-2 mt-2 mb-2 mr-2 ml-2 focus:outline-none focus:border-blue-500 bg-gray-800 text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Content\",\n          value: addPostFormData.content,\n          name: \"content\",\n          onChange: e => setAddPostFormData({\n            ...addPostFormData,\n            content: e.target.value\n          }),\n          disabled: editingPostId !== null,\n          className: \"border rounded px-4 py-2 mt-2 mb-2 ml-2 mr-2 focus:outline-none focus:border-blue-500 bg-gray-800 text-white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddPost,\n          disabled: editingPostId !== null,\n          className: \"bg-blue-500 text-white px-2 py-2 mr-2 ml-2 mt-2 mb-2 rounded hover:bg-blue-600 focus:outline-none\",\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-bold mb-2\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), editingPostId === post.id ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleEditFormSubmit,\n            className: \"flex items-center mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Title\",\n              value: editPostFormData.title,\n              name: \"title\",\n              onChange: handleEditFormChange,\n              className: \"border rounded px-2 py-2 mr-2 ml-2 focus:outline-none focus:border-blue-500 bg-gray-800 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Content\",\n              value: editPostFormData.content,\n              name: \"content\",\n              onChange: handleEditFormChange,\n              className: \"border rounded px-4 py-2 mr-2 mt-2 mb-2 ml-2 focus:outline-none focus:border-blue-500 bg-gray-800 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"bg-blue-500 text-white px-4 py-2 ml-2 mr-2 rounded hover:bg-blue-600 focus:outline-none\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleCancelEdit,\n              className: \"bg-gray-300 text-gray-700 px-4 py-2 ml-2 mr-2 rounded hover:bg-gray-400 focus:outline-none\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdatePost(post.id),\n              className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\",\n              children: \"Edit Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(post.id),\n              className: \"bg-red-500 text-white px-4 py-2 rounded ml-2 hover:bg-red-600 focus:outline-none\",\n              children: \"Delete Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"KkTnfNEwUSm+kEgxvxrJw7EE8tk=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["styles","React","useEffect","useState","useDispatch","useSelector","fetchPosts","deletePost","addPost","addPostAction","updatePost","updatePostAction","setPosts","useNavigate","selectIsLoggedIn","logout","selectPosts","jsxDEV","_jsxDEV","UserDashboard","_s","dispatch","navigate","posts","isLoggedIn","addPostFormData","setAddPostFormData","title","content","editPostFormData","setEditPostFormData","editingPostId","setEditingPostId","handleDelete","postId","handleAddPost","handleUpdatePost","postToUpdate","find","post","id","handleEditFormChange","e","target","name","value","handleEditFormSubmit","preventDefault","handleCancelEdit","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","disabled","map","onSubmit","_c","$RefreshReg$"],"sources":["/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/UserDashboard.js"],"sourcesContent":["/* import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n  setPosts\n} from \"../features/posts/postsSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\";\nimport { selectPosts } from \"../features/posts/postsSlice\";\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const posts = useSelector(selectPosts);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    const postToUpdate = posts.find((post) => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content,\n      });\n    }\n    setEditingPostId(postId);\n  };\n\n  const handleEditFormChange = (e) => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEditFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleCancelEdit = () => {\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleLogout = () => {\n    dispatch(setPosts());\n    dispatch(logout());\n  };\n \n  return (\n    <div className=\"container mx-auto p-4\">\n      <h2 className=\"text-2xl font-bold mb-4\">User Dashboard</h2>\n      <div className=\"mb-4\">\n        <button\n          onClick={handleLogout}\n          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 focus:outline-none\"\n        >\n          Logout\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={addPostFormData.title}\n          name=\"title\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, title: e.target.value })\n          }\n          disabled={editingPostId !== null}\n          className=\"border rounded px-4 py-2 mt-2 mr-2 focus:outline-none focus:border-blue-500\"\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={addPostFormData.content}\n          name=\"content\"\n          onChange={(e) =>\n            setAddPostFormData({ ...addPostFormData, content: e.target.value })\n          }\n          disabled={editingPostId !== null}\n          className=\"border rounded px-4 py-2 mt-2 mr-2 focus:outline-none focus:border-blue-500\"\n        ></textarea>\n        <button\n          onClick={handleAddPost}\n          disabled={editingPostId !== null}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\"\n        >\n          Add Post\n        </button>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id} className=\"mb-4\">\n            <h3 className=\"text-xl font-bold mb-2\">{post.title}</h3>\n            <p>{post.content}</p>\n            {editingPostId === post.id ? (\n              <form onSubmit={handleEditFormSubmit} className=\"mt-2\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Title\"\n                  value={editPostFormData.title}\n                  name=\"title\"\n                  onChange={handleEditFormChange}\n                  className=\"border rounded px-4 py-2 mr-2 focus:outline-none focus:border-blue-500\"\n                />\n                <textarea\n                  placeholder=\"Content\"\n                  value={editPostFormData.content}\n                  name=\"content\"\n                  onChange={handleEditFormChange}\n                  className=\"border rounded px-4 py-2 mr-2 focus:outline-none focus:border-blue-500\"\n                ></textarea>\n                <button\n                  type=\"submit\"\n                  className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\"\n                >\n                  Update\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handleCancelEdit}\n                  className=\"bg-gray-300 text-gray-700 px-4 py-2 rounded ml-2 hover:bg-gray-400 focus:outline-none\"\n                >\n                  Cancel\n                </button>\n              </form>\n            ) : (\n              <div className=\"mt-2\">\n                <button\n                  onClick={() => handleUpdatePost(post.id)}\n                  className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\"\n                >\n                  Edit Post\n                </button>\n                <button\n                  onClick={() => handleDelete(post.id)}\n                  className=\"bg-red-500 text-white px-4 py-2 rounded ml-2 hover:bg-red-600 focus:outline-none\"\n                >\n                  Delete Post\n                </button>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n */\nimport styles from \"../index.css\"\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n  setPosts\n} from \"../features/posts/postsSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\";\nimport { selectPosts } from \"../features/posts/postsSlice\";\n\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const posts = useSelector(selectPosts);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const [addPostFormData, setAddPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editPostFormData, setEditPostFormData] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [editingPostId, setEditingPostId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(addPostFormData.title, addPostFormData.content));\n    setAddPostFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    const postToUpdate = posts.find((post) => post.id === postId);\n    if (postToUpdate) {\n      setEditPostFormData({\n        title: postToUpdate.title,\n        content: postToUpdate.content,\n      });\n    }\n    setEditingPostId(postId);\n  };\n\n  const handleEditFormChange = (e) => {\n    setEditPostFormData({\n      ...editPostFormData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleEditFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updatePostAction(editingPostId, editPostFormData));\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleCancelEdit = () => {\n    setEditPostFormData({ title: \"\", content: \"\" });\n    setEditingPostId(null);\n  };\n\n  const handleLogout = () => {\n    dispatch(setPosts());\n    dispatch(logout());\n  };\n \n  return (\n    <div className=\"h-screen overflow-y-auto bg-gradient-to-br from-purple-900 to-blue-900 text-white\">\n      <div className=\"container mx-auto p-4\">\n        <h2 className=\"flex text-3xl font-bold mb-4 justify-left \">User Dashboard</h2>\n        <div className=\"mb-4 flex items-center justify-left \">\n          <button\n            onClick={handleLogout}\n            className=\" bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 focus:outline-none mr-2 ml-2\"\n          >\n            Logout\n          </button>\n          <input\n            type=\"text\" \n            placeholder=\"Title\"\n            value={addPostFormData.title}\n            name=\"title\"\n            onChange={(e) =>\n              setAddPostFormData({ ...addPostFormData, title: e.target.value })\n            }\n            disabled={editingPostId !== null}\n            className=\" border rounded px-4 py-2 mt-2 mb-2 mr-2 ml-2 focus:outline-none focus:border-blue-500 bg-gray-800 text-white\"\n          />\n          <textarea\n            placeholder=\"Content\"\n            value={addPostFormData.content}\n            name=\"content\"\n            onChange={(e) =>\n              setAddPostFormData({ ...addPostFormData, content: e.target.value })\n            }\n            disabled={editingPostId !== null}\n            className=\"border rounded px-4 py-2 mt-2 mb-2 ml-2 mr-2 focus:outline-none focus:border-blue-500 bg-gray-800 text-white\"\n          ></textarea>\n          <button\n            onClick={handleAddPost}\n            disabled={editingPostId !== null}\n            className=\"bg-blue-500 text-white px-2 py-2 mr-2 ml-2 mt-2 mb-2 rounded hover:bg-blue-600 focus:outline-none\"\n          >\n            Add Post\n          </button>\n        </div>\n        <ul>\n          {posts.map((post) => (\n            <li key={post.id} className=\"mb-4\">\n              <h3 className=\"text-xl font-bold mb-2\">{post.title}</h3>\n              <p>{post.content}</p>\n              {editingPostId === post.id ? (\n                <form onSubmit={handleEditFormSubmit} className=\"flex items-center mt-2\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    value={editPostFormData.title}\n                    name=\"title\"\n                    onChange={handleEditFormChange}\n                    className=\"border rounded px-2 py-2 mr-2 ml-2 focus:outline-none focus:border-blue-500 bg-gray-800 text-white\"\n                  />\n                  <textarea\n                    placeholder=\"Content\"\n                    value={editPostFormData.content}\n                    name=\"content\"\n                    onChange={handleEditFormChange}\n                    className=\"border rounded px-4 py-2 mr-2 mt-2 mb-2 ml-2 focus:outline-none focus:border-blue-500 bg-gray-800 text-white\"\n                  ></textarea>\n                  <button\n                    type=\"submit\"\n                    className=\"bg-blue-500 text-white px-4 py-2 ml-2 mr-2 rounded hover:bg-blue-600 focus:outline-none\"\n                  >\n                    Update\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={handleCancelEdit}\n                    className=\"bg-gray-300 text-gray-700 px-4 py-2 ml-2 mr-2 rounded hover:bg-gray-400 focus:outline-none\"\n                  >\n                    Cancel\n                  </button>\n                </form>\n              ) : (\n                <div className=\"mt-2\">\n                  <button\n                    onClick={() => handleUpdatePost(post.id)}\n                    className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 focus:outline-none\"\n                  >\n                    Edit Post\n                  </button>\n                  <button\n                    onClick={() => handleDelete(post.id)}\n                    className=\"bg-red-500 text-white px-4 py-2 rounded ml-2 hover:bg-red-600 focus:outline-none\"\n                  >\n                    Delete Post\n                  </button>\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}