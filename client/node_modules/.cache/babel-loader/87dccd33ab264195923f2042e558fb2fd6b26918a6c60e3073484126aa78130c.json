{"ast":null,"code":"var _jsxFileName = \"/home/chiragramnani/Desktop/project/full-stack-crud/client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport { useSelector, useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport UserDashboard from \"./components/UserDashboard\";\nimport { selectIsLoggedIn } from \"./features/auth/authSlice\";\nimport { selectRole } from \"./features/auth/authSlice\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.addEventListener(\"beforeunload\", () => {\n  // Clear token from local storage\n  localStorage.removeItem(\"token\");\n});\n/* \nconst PrivateRoutes = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n  return (\n    isLoggedIn ? <Outlet/> : <Navigate to='/login'/>\n  )\n}\n */\nconst App = () => {\n  _s();\n  const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n  const role = useSelector(selectRole);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(RegistrationForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin-dashboard\",\n        element: role === \"admin\" ? /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 68\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user-dashboard\",\n        element: role === \"regular\" ? /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 69\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"63mx2AlpwBpnwsqoRoYIVXEEDw0=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useSelector","useDispatch","React","BrowserRouter","Router","Routes","Route","LoginForm","RegistrationForm","AdminDashboard","UserDashboard","selectIsLoggedIn","selectRole","Navigate","jsxDEV","_jsxDEV","window","addEventListener","localStorage","removeItem","App","_s","isLoggedIn","role","dispatch","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/chiragramnani/Desktop/project/full-stack-crud/client/src/App.js"],"sourcesContent":["// App.js\nimport {useSelector,useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegistrationForm from \"./components/RegistrationForm\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport UserDashboard from \"./components/UserDashboard\";\nimport { selectIsLoggedIn } from \"./features/auth/authSlice\";\nimport { selectRole } from \"./features/auth/authSlice\";\nimport { Navigate } from \"react-router-dom\";\nwindow.addEventListener(\"beforeunload\", () => {\n  // Clear token from local storage\n  localStorage.removeItem(\"token\");\n});\n/* \nconst PrivateRoutes = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n  return (\n    isLoggedIn ? <Outlet/> : <Navigate to='/login'/>\n  )\n}\n */\nconst App = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n  const role = useSelector(selectRole); \n  const dispatch = useDispatch();\n  return (\n\n    <Router>\n      <Routes>\n            <Route path=\"/login\" element={<LoginForm/> } />\n            <Route path=\"/register\" element={<RegistrationForm />} />\n            <Route path=\"/admin-dashboard\" element={role===\"admin\"?<AdminDashboard />:<Navigate to=\"/\"/>} />\n            <Route path=\"/user-dashboard\" element={role===\"regular\"?<UserDashboard />:<Navigate to=\"/\"/>} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}