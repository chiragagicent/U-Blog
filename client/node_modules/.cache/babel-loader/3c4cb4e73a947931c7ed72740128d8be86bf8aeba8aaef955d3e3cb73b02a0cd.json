{"ast":null,"code":"/* import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  selectPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n} from \"../features/posts/postsSlice\";\n\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(selectPosts);\n  const [formData, setFormData] = useState({ title: \"\", content: \"\" });\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(formData.title, formData.content));\n    setFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    dispatch(updatePostAction(postId, formData));\n    setFormData({ title: \"\", content: \"\" });\n  };\n\n  return (\n    <div>\n      <h2>User Dashboard</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={formData.title}\n          onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={formData.content}\n          onChange={(e) =>\n            setFormData({ ...formData, content: e.target.value })\n          }\n        ></textarea>\n        <button onClick={handleAddPost}>Add Post</button>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            <button onClick={() => handleUpdatePost(post.id)}>Edit Post</button>\n            <button onClick={() => handleDelete(post.id)}>Delete Post</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n */","map":{"version":3,"names":[],"sources":["/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/UserDashboard.js"],"sourcesContent":["/* import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  fetchPosts,\n  selectPosts,\n  deletePost,\n  addPost as addPostAction,\n  updatePost as updatePostAction,\n} from \"../features/posts/postsSlice\";\n\nconst UserDashboard = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(selectPosts);\n  const [formData, setFormData] = useState({ title: \"\", content: \"\" });\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n  };\n\n  const handleAddPost = () => {\n    dispatch(addPostAction(formData.title, formData.content));\n    setFormData({ title: \"\", content: \"\" });\n  };\n\n  const handleUpdatePost = (postId) => {\n    dispatch(updatePostAction(postId, formData));\n    setFormData({ title: \"\", content: \"\" });\n  };\n\n  return (\n    <div>\n      <h2>User Dashboard</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={formData.title}\n          onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n        />\n        <textarea\n          placeholder=\"Content\"\n          value={formData.content}\n          onChange={(e) =>\n            setFormData({ ...formData, content: e.target.value })\n          }\n        ></textarea>\n        <button onClick={handleAddPost}>Add Post</button>\n      </div>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            <button onClick={() => handleUpdatePost(post.id)}>Edit Post</button>\n            <button onClick={() => handleDelete(post.id)}>Delete Post</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserDashboard;\n */"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}