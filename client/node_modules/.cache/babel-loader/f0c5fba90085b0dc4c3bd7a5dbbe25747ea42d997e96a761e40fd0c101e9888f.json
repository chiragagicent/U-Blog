{"ast":null,"code":"var _jsxFileName = \"/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\"; // Import selectIsLoggedIn and logout\nimport { fetchUsers, selectUsers, deleteUser, addUser as addUserAction, updateUser as updateUserAction } from \"../features/user/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const users = useSelector(selectUsers);\n  const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n\n  const [addformData, setAddFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  const [editformData, setEditformData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  const [edituser, setEdituser] = useState(null);\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n  const handleDelete = userId => {\n    dispatch(deleteUser(userId));\n  };\n  const handleAddUser = () => {\n    dispatch(addUserAction(formData.name, formData.email, formData.password, formData.role));\n    setFormData({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      role: \"\"\n    });\n  };\n  const handleUpdateUser = userId => {\n    dispatch(updateUserAction(userId, formData));\n    setFormData({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      role: \"\"\n    });\n  };\n  const handleLogout = () => {\n    dispatch(logout()); // Dispatch logout action\n  };\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    }\n  }, [isLoggedIn, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: formData.name,\n        onChange: e => setFormData({\n          ...formData,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: formData.password,\n        onChange: e => setFormData({\n          ...formData,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"role\",\n        value: formData.role,\n        onChange: e => setFormData({\n          ...formData,\n          role: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddUser,\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateUser(user.id),\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(user.id),\n          children: \"Delete User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"9L86EdG09u7PS+ukknzLJH/KAU4=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","selectIsLoggedIn","logout","fetchUsers","selectUsers","deleteUser","addUser","addUserAction","updateUser","updateUserAction","jsxDEV","_jsxDEV","AdminDashboard","_s","dispatch","navigate","users","isLoggedIn","addformData","setAddFormData","name","email","password","role","editformData","setEditformData","edituser","setEdituser","handleDelete","userId","handleAddUser","formData","setFormData","handleUpdateUser","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","map","user","id","_c","$RefreshReg$"],"sources":["/home/chiragramnani/Desktop/project/full-stack-crud/client/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport { selectIsLoggedIn, logout } from \"../features/auth/authSlice\"; // Import selectIsLoggedIn and logout\nimport {\n  fetchUsers,\n  selectUsers,\n  deleteUser,\n  addUser as addUserAction,\n  updateUser as updateUserAction,\n} from \"../features/user/userSlice\";\n\nconst AdminDashboard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const users = useSelector(selectUsers);\n  const isLoggedIn = useSelector(selectIsLoggedIn); // Get login status\n\n  const [addformData, setAddFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    role: \"\",\n  });\n\n    const [editformData, setEditformData] = useState({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      role: \"\",\n    });\n\n  const[edituser,setEdituser]= useState(null);\n\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  const handleDelete = (userId) => {\n    dispatch(deleteUser(userId));\n  };\n\n  const handleAddUser = () => {\n    dispatch(\n      addUserAction(\n        formData.name,\n        formData.email,\n        formData.password,\n        formData.role\n      )\n    );\n    setFormData({ name: \"\", email: \"\", password: \"\", role: \"\" });\n  };\n\n  const handleUpdateUser = (userId) => {\n    dispatch(updateUserAction(userId, formData));\n    setFormData({ name: \"\", email: \"\", password: \"\", role: \"\" });\n  };\n\n  const handleLogout = () => {\n    dispatch(logout()); // Dispatch logout action\n  };\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/login\");\n    }\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <div>\n      <h2>Admin Dashboard</h2>\n      <div>\n        <button onClick={handleLogout}>Logout</button>\n\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={formData.name}\n          onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={formData.email}\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"password\"\n          value={formData.password}\n          onChange={(e) =>\n            setFormData({ ...formData, password: e.target.value })\n          }\n        />\n        <input\n          type=\"text\"\n          placeholder=\"role\"\n          value={formData.role}\n          onChange={(e) => setFormData({ ...formData, role: e.target.value })}\n        />\n        <button onClick={handleAddUser}>Add User</button>\n      </div>\n      <ul>\n        {users.map((user) => (\n          <li key={user.id}>\n            <h3>{user.name}</h3>\n            <p>{user.email}</p>\n            <p>{user.role}</p>\n            <button onClick={() => handleUpdateUser(user.id)}>Edit User</button>\n            <button onClick={() => handleDelete(user.id)}>Delete User</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,gBAAgB,EAAEC,MAAM,QAAQ,4BAA4B,CAAC,CAAC;AACvE,SACEC,UAAU,EACVC,WAAW,EACXC,UAAU,EACVC,OAAO,IAAIC,aAAa,EACxBC,UAAU,IAAIC,gBAAgB,QACzB,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,KAAK,GAAGjB,WAAW,CAACK,WAAW,CAAC;EACtC,MAAMa,UAAU,GAAGlB,WAAW,CAACE,gBAAgB,CAAC,CAAC,CAAC;;EAElD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC;IAC7CuB,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE;EACR,CAAC,CAAC;EAEA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC;IAC/CuB,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE;EACR,CAAC,CAAC;EAEJ,MAAK,CAACG,QAAQ,EAACC,WAAW,CAAC,GAAE9B,QAAQ,CAAC,IAAI,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACX,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACW,QAAQ,CAAC,CAAC;EAEd,MAAMc,YAAY,GAAIC,MAAM,IAAK;IAC/Bf,QAAQ,CAACT,UAAU,CAACwB,MAAM,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BhB,QAAQ,CACNP,aAAa,CACXwB,QAAQ,CAACX,IAAI,EACbW,QAAQ,CAACV,KAAK,EACdU,QAAQ,CAACT,QAAQ,EACjBS,QAAQ,CAACR,IACX,CACF,CAAC;IACDS,WAAW,CAAC;MAAEZ,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMU,gBAAgB,GAAIJ,MAAM,IAAK;IACnCf,QAAQ,CAACL,gBAAgB,CAACoB,MAAM,EAAEE,QAAQ,CAAC,CAAC;IAC5CC,WAAW,CAAC;MAAEZ,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzBpB,QAAQ,CAACZ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC;EAEDN,SAAS,CAAC,MAAM;IACd,IAAI,CAACqB,UAAU,EAAE;MACfF,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACE,UAAU,EAAEF,QAAQ,CAAC,CAAC;EAE1B,oBACEJ,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB5B,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAQ6B,OAAO,EAAEN,YAAa;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAE9C5B,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,MAAM;QAClBC,KAAK,EAAEZ,QAAQ,CAACX,IAAK;QACrBwB,QAAQ,EAAGC,CAAC,IAAKb,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEX,IAAI,EAAEyB,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACF5B,OAAA;QACE8B,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAEZ,QAAQ,CAACV,KAAM;QACtBuB,QAAQ,EAAGC,CAAC,IAAKb,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEV,KAAK,EAAEwB,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC,eACF5B,OAAA;QACE8B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEZ,QAAQ,CAACT,QAAS;QACzBsB,QAAQ,EAAGC,CAAC,IACVb,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAET,QAAQ,EAAEuB,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC;MACtD;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACF5B,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,MAAM;QAClBC,KAAK,EAAEZ,QAAQ,CAACR,IAAK;QACrBqB,QAAQ,EAAGC,CAAC,IAAKb,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAER,IAAI,EAAEsB,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACF5B,OAAA;QAAQ6B,OAAO,EAAEV,aAAc;QAAAK,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACN5B,OAAA;MAAAwB,QAAA,EACGnB,KAAK,CAAC+B,GAAG,CAAEC,IAAI,iBACdrC,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAAwB,QAAA,EAAKa,IAAI,CAAC5B;QAAI;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpB5B,OAAA;UAAAwB,QAAA,EAAIa,IAAI,CAAC3B;QAAK;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnB5B,OAAA;UAAAwB,QAAA,EAAIa,IAAI,CAACzB;QAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClB5B,OAAA;UAAQ6B,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAACe,IAAI,CAACC,EAAE,CAAE;UAAAd,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpE5B,OAAA;UAAQ6B,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAACoB,IAAI,CAACC,EAAE,CAAE;UAAAd,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAL3DS,IAAI,CAACC,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAzGID,cAAc;EAAA,QACDd,WAAW,EACXE,WAAW,EAEdD,WAAW,EACNA,WAAW;AAAA;AAAAmD,EAAA,GAL1BtC,cAAc;AA2GpB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}